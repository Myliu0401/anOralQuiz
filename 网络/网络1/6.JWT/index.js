/* 
       JWT 本质就是一个字符串，一个令牌格式而已，它解决了，在互联网中，提供统一的、安全的令牌格式。

       JWT的组成
         为了保证令牌的安全性，由三部分组成。

         header.payload.signature

         header：令牌头部，记录整个令牌的类型和签名算法
         payload：令牌负荷，记录保存的主体信息
         signature：令牌签名，按照头部固定的签名算法对整个令牌进行签名，该签名的作用是保证令牌不被伪造和篡改

         
         header为一个json对象,然后对该json对象进行 base64 url 编码
          { 
            "alg":"算法",
            "typ":"JWT"
          }

         payload
           这部分是jwt的主体信息，它仍然是一个json对象
             ss:   发行该jwt是谁
             iat:  该jwt的发放时间，通常写当前时间戳
             exp:  该jwt的过期时间，通常写时间戳
             sub:  该jwt是用于干嘛的
             aud:  该jwt是发放给那个终端的
             nbf:  一个时间点，在该时间点到达之前，这个令牌不可用
             jti:  jwt的唯一编号，主要是为了防止重放攻击
             ...等等其他属性或自定义属性
            将这个json对象进行 base64 url 编码

         signature
            这部分是jwt的签名，由于这部分的存在，保证了整个jwt不被篡改
            这部分的生成，是对前面两部分的编码结果，按照头部指定的算法进行加密
            当然得指定一个秘钥，该秘钥放在服务端，不会给到客户端。
        


*/