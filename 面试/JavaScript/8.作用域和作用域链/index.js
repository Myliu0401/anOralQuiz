/* 

    作用域决定了代码区块中变量和其他资源的可见性

    ES6之前JS没有块级作用域，只有全局作用域和函数作用域
    ES为我们提供了块级作用域，可通过新增命令 let 和 const 来实现

    要到创建这个函数的那个域，作用域中取值，这里强调的是*创建*，而不是*调用*，其实这就是所谓的*静态作用域*


    JS属于解释型语言，js的执行分为：解释和执行两个阶段，这两个阶段所做的事情并不一样

       解释阶段
          词法分析
          语法分析
          作用域规则的确定

       执行阶段
          创建执行上下文
          执行函数代码
          垃圾回收


    执行上下文最明显的就是thi的指向是执行时确定的，而作用域访问的变量是编写代码时结构确定的
    作用域和执行上下文之间最大的区别：
       执行上下文在运行时确定，随时可能改变，作用域在定义时就确定，并且不会改变


   

*/